<div class="w-full h-full m-4">
    <!-- Header com nome do outro usuÃ¡rio -->
    <div class="fixed flex justify-center h-10 w-4/6 border-2 rounded-xl border-slate-400 bg-slate-300 dark:bg-slate-900">
        <h2 class="text-2xl font-bold text-gray-500"><%= outroUsuarioNome %></h2>
    </div>

    <!-- Lista de mensagens -->
    <ul id="messages" class=" m-2 w-4/6 h-125 overflow-y-auto space-y-2 px-4 py-4 my-10 scrollbar-hide text-slate-900 dark:text-slate-200">
        <% mensagens.forEach(msg => { %>
            <% const isMine = msg.nome === user.nome; %>
            <li class="flex <%= isMine ? 'justify-end' : 'justify-start' %>">
                <div class="<%= isMine ? 'bg-green-500 text-white' : 'bg-gray-300 text-black' %> px-4 py-2 rounded-2xl max-w-xs break-words shadow"
                    style="width: fit-content">
                    <p class="text-sm"><%= msg.conteudo %></p>
                    <span class="text-xs opacity-60 block mt-1 text-right">
                        <%= new Date(msg.timestamp).toLocaleTimeString() %>
                    </span>
                </div>
            </li>
        <% }); %>
    </ul>

    <!-- Campo de envio -->
    <div class="fixed flex w-4/6 justify-center items-center bottom-6">
        <div class="flex h-10 w-full mr-2 rounded-full items-center bg-slate-300 dark:bg-slate-800">
            <input 
                id="messageInput" 
                placeholder="Digite sua mensagem"
                class="w-full mr-4 ml-6 text-slate-900 dark:text-slate-200 bg-transparent outline-none"
            >                                  
        </div>
        <button id="sendBtn" class="flex flex-col h-10 w-10 rounded-full items-center justify-center hover:bg-slate-300 dark:hover:bg-slate-800">
            <svg xmlns="http://www.w3.org/2000/svg" style="transform: rotate(90deg);" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-slate-900 dark:text-slate-200">
                <path stroke-linecap="round" stroke-linejoin="round" d="m11.25 9-3 3m0 0 3 3m-3-3h7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
        </button>
    </div>
</div>


<script src="/socket.io/socket.io.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const socket = io();
        const roomId = "<%= roomId %>";
        const userId = "<%= user.id %>";
        const userName = "<%= user.nome %>";

        socket.emit("joinRoom", roomId);

        socket.on("chatMessage", (msg) => {
            renderMessage(msg);
        });

        document.getElementById("sendBtn").addEventListener("click", sendMessage);

        document.getElementById("messageInput").addEventListener("keydown", (e) => {
            if (e.key === "Enter") {
                sendMessage();
            }
        });

        function renderMessage(msg) {
            const isMine = msg.senderId === userId;

            const outerDiv = document.createElement("div");
            outerDiv.className = `flex ${isMine ? "justify-end" : "justify-start"}`;

            const bubbleDiv = document.createElement("div");
            bubbleDiv.className = `${isMine ? "bg-green-500 text-white" : "bg-gray-300 text-black"} px-4 py-2 rounded-2xl max-w-xs break-words shadow`;
            bubbleDiv.style.width = "fit-content";

            const li = document.createElement("li");

            const p = document.createElement("p");
            p.className = "text-sm";
            p.textContent = msg.message;

            const span = document.createElement("span");
            span.className = "text-xs opacity-60 block mt-1 text-right";
            span.textContent = new Date(msg.timestamp).toLocaleTimeString();

            li.appendChild(p);
            li.appendChild(span);
            bubbleDiv.appendChild(li);
            outerDiv.appendChild(bubbleDiv);

            document.getElementById("messages").appendChild(outerDiv);
            const messages = document.getElementById("messages");
            messages.scrollTop = messages.scrollHeight;
        }

        function sendMessage() {
            const input = document.getElementById("messageInput");
            const message = input.value.trim();
            if (message !== "") {
                socket.emit("chatMessage", {
                    roomId,
                    senderId: userId,
                    senderName : userName,
                    message,
                });
                input.value = "";
            }
        }
    });

    window.addEventListener("DOMContentLoaded", () => {
        const messages = document.getElementById("messages");
        if (messages) {
            messages.scrollTop = messages.scrollHeight;
        }
    });
</script>
