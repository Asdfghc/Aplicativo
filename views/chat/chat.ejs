<div class="w-full h-full m-4 ">
    <div class="fixed flex justify-center h-10 w-1/2 border-2 rounded-xl border-slate-400 bg-slate-300 dark:bg-slate-900">
        <h2 class="text-2xl font-bold text-gray-500"> NOME </h2>
    </div>
    <%# TODO: NOME %>

    <div class="fixed flex top-38 h-4/6 w-4/6 rounded-xl overflow-hidden">
        <ul id="messages" class="m-2 w-full h-110 overflow-y-auto space-y-2 px-4 py-4 scrollbar-hide text-slate-900 dark:text-slate-200"></ul>
    </div>

    <div class="fixed flex w-4/6 justify-center items-center bottom-6">
        <div class="flex h-10 w-full mr-2 rounded-full items-center bg-slate-400 dark:bg-slate-800">
                    <input 
                        id="messageInput" placeholder="Digite sua mensagem"
                      class="w-full mr-4 ml-6 text-slate-900 dark:text-slate-200 outline-none"
                    >                                  
        </div>
        <button id="sendBtn" class="flex flex-col h-10 w-10 rounded-full items-center justify-center hover:bg-slate-400 dark:hover:bg-slate-800">
            <svg xmlns="http://www.w3.org/2000/svg" style="transform: rotate(90deg);" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-slate-900 dark:text-slate-200">
                <path stroke-linecap="round" stroke-linejoin="round" d="m11.25 9-3 3m0 0 3 3m-3-3h7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>

        </button>
    </div>
</div>

<%# TODO: Melhorar usando ejs %>

<script src="/socket.io/socket.io.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const socket = io();
        const roomId = "<%= roomId %>";
        const userId = "<%= user.id %>";
        const userName = "<%= user.nome %>";

        socket.emit("joinRoom", roomId);

        socket.on("chatMessage", (msg) => {
            renderMessage(msg);
        });

        socket.on("loadMessages", (messages) => {
            const messagesList = document.getElementById("messages");

            // TODO: Funcao de renderizar mensagens
            messages.forEach((msg) => {
                console.log(msg);
                const li = document.createElement("li");
                const sender = msg.NOME === userName ? "Você" : msg.NOME;
                li.textContent = `${sender}: ${msg.CONTEUDO}`;
                messagesList.appendChild(li);
            });
        });

        document.getElementById("sendBtn").addEventListener("click", sendMessage);

        document.getElementById("messageInput").addEventListener("keydown", (e) => {
            if (e.key === "Enter") {
                sendMessage();
            }
        });

        function renderMessage(msg) {
            const li = document.createElement("li");
            const userName = msg.senderId === userId ? "Você" : msg.senderName;
            li.textContent = `${userName}: ${msg.message}`;
            document.getElementById("messages").appendChild(li);
        }

        function sendMessage() {
            const input = document.getElementById("messageInput");
            const message = input.value.trim();
            if (message !== "") {
                socket.emit("chatMessage", {
                    roomId,
                    senderId: userId,
                    senderName : userName,
                    message,
                });
                input.value = "";
            }
        }
    });
</script>
